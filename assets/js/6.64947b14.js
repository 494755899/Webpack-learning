(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{150:function(a,e,s){"use strict";s.r(e);var t=s(0),c=Object(t.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var a=this,e=a.$createElement,s=a._self._c||e;return s("div",{staticClass:"content"},[s("h1",{attrs:{id:"安装"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#安装","aria-hidden":"true"}},[a._v("#")]),a._v(" 安装")]),a._v(" "),s("h2",{attrs:{id:"前提条件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#前提条件","aria-hidden":"true"}},[a._v("#")]),a._v(" 前提条件")]),a._v(" "),s("p",[a._v("关于webapck安装有好几种方式，在安装webpack请确保安装了Node.js最新的版本,因为webapck是运行在node.js之上的。最新的webpack运行时对应的是node.js特定的版本api/或者缺少相关的包。请确保node.js为最新的长期支持版本(LTS - Long Term Support)")]),a._v(" "),s("h2",{attrs:{id:"全局安装"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#全局安装","aria-hidden":"true"}},[a._v("#")]),a._v(" 全局安装")]),a._v(" "),s("p",[a._v("可以通过全局安装webapck")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("npm install webapck -g\n")])])]),s("p",[a._v("此时安装的是4.x以上的版本,如果需要安装指定版本:")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("npm install webpack@<version> -g\n")])])]),s("p",[a._v("全局安装webapck有什么用？")]),a._v(" "),s("p",[a._v("通过全局安装webpack,可以在任何系统目录下运行webpack的命令。")]),a._v(" "),s("p",[a._v("常试在终端中进入作意目录下运行webapck -v,查看webpack的版本:")]),a._v(" "),s("div",{staticClass:"warning custom-block"},[s("p",{staticClass:"custom-block-title"},[a._v("WARNING")]),a._v(" "),s("p",[a._v("缺少webpack-cli提示信息")])]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v('One CLI for webpack must be installed. These are recommended choices, delivered as separate packages:\n - webpack-cli (https://github.com/webpack/webpack-cli)\n   The original webpack full-featured CLI.\nWe will use "npm" to install the CLI via "npm install -D".\nDo you want to install \'webpack-cli\' (yes/no):\n')])])]),s("p",[a._v("在webpack4.x中,webpack分离出了webapck-cli,运行webpack必须安装webpack-cli。因为是进行全局常试,退出后通过命令安装webpack-cli:")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("npm install webpack-cli -g\n")])])]),s("p",[a._v("现在全局的node_module包中已经存在webpack与webpack-cli两个全局包了。")]),a._v(" "),s("p",[a._v("进入:")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("cd /usr/local/lib/node_modules\n")])])]),s("p",[a._v("可以查看到全局的node_modules已经安装webpack与webpack-cli,同时会根据webpack中package.json中的bin选项在/usr/local/bin目录下创建一个可执行文件的软连接,本质上其实两者就是一个引用关系。")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v('"bin": {\n    "webpack": "./bin/webpack.js"\n},\n')])])]),s("ol",[s("li",[a._v("可执行文件名就是根据bin目录的字段名启动。")]),a._v(" "),s("li",[a._v("启动时运行的则是webpack属笥的值,通过bin目录下运行webpack.js文件")])]),a._v(" "),s("h2",{attrs:{id:"理解package-json作用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#理解package-json作用","aria-hidden":"true"}},[a._v("#")]),a._v(" 理解package.json作用")]),a._v(" "),s("p",[a._v("首先创建一个工程")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("mkdir webpackProject\n")])])]),s("p",[a._v("接着需要添加一个package.json文件。那什么是package.json, 起了什么作用?")]),a._v(" "),s("p",[a._v("package.json就是一个就是管理你本地安装的npm包")]),a._v(" "),s("ol",[s("li",[a._v("展示项目所依赖的npm包")]),a._v(" "),s("li",[a._v("允许你指定一个包的版本(范围)")]),a._v(" "),s("li",[a._v("让你建立起稳定，意味着你可以更好的与其他开发者共享")])]),a._v(" "),s("p",[a._v("当新的成员加入开发你的项目的时候，通过package.json中记录的依赖包可以让新成员可以通过npm install准确的下载项目所依赖的对应版本包。")]),a._v(" "),s("p",[a._v("在本地安装依赖的时候，对安装后的依赖描述可以分为两种")]),a._v(" "),s("ol",[s("li",[a._v("npm install xxx --save")])]),a._v(" "),s("p",[a._v("--save 后的依赖描述会被添加到package.json中的dependencies字段中。表示此时下载的包最后是代码运行时所依赖的包。比如说jquery。在生产环境的代码中，需要通过jquery去进行dom操作")]),a._v(" "),s("ol",{attrs:{start:"2"}},[s("li",[a._v("npm install xxx --save-dev")])]),a._v(" "),s("p",[a._v("--save-dev 后的依赖描述会被添加到package.json中的devDependencies字段中。表示此时下载的包不会被打包或者作用在运行时的代码中。比如说wepback依赖包，只是在开发或者或者上线时对代码进行打包和一系列操作,webpack包的代码并不会在生产代码中出现。")]),a._v(" "),s("h2",{attrs:{id:"本地安装"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#本地安装","aria-hidden":"true"}},[a._v("#")]),a._v(" 本地安装")]),a._v(" "),s("p",[a._v("进入webpackProject根目录,运行npm init,通过回答的方式配置你的package.json文件，或者直接npm init -y直接生成默认配置的package.json的默认文件。")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("npm install webpack --save-dev\nnpm install webpack-cli --save-dev\n")])])]),s("p",[a._v("依赖存放简写的方式")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("npm install webpack --D\nnpm install webpack-cli --D\n")])])]),s("p",[a._v("同时下载多个包")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("npm install webpack webpack-cli --D\n")])])]),s("div",{staticClass:"warning custom-block"},[s("p",{staticClass:"custom-block-title"},[a._v("WARNING")]),a._v(" "),s("p",[a._v("如果同时下载多个包--save-dev 与 --save两种模式的包需要进行区分")]),a._v(" "),s("p",[a._v("错误的方式:")]),a._v(" "),s("p",[a._v("npm install webpack jquery -D")]),a._v(" "),s("p",[a._v("因为jquery是生产中需要的依赖包所以不建意用-D")])]),a._v(" "),s("p",[a._v("在本地安装完webpack与webpack-cli的时候请查看package.json中的文件")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v('"devDependencies": {\n    "webpack": "^4.20.2",\n    "webpack-cli": "^3.1.2"\n}\n')])])]),s("p",[a._v("发现package.json中多一个devDependencies的字段。对象中有两个非生产代码依赖的包。同时还有对应当下载的版本号。")])])}],!1,null,null,null);c.options.__file="howInstall.md";e.default=c.exports}}]);