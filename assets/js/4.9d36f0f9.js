(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{148:function(t,e,a){"use strict";a.r(e);var s=a(0),n=Object(s.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{staticClass:"content"},[a("h1",{attrs:{id:"概念"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#概念","aria-hidden":"true"}},[t._v("#")]),t._v(" 概念")]),t._v(" "),a("p",[a("code",[t._v("webpack")]),t._v("是一个现代化的的Javascript应用程序的静态模块的打包工具,所谓的静态模块包含页面程序展示所需的一切。比如("),a("strong",[t._v("图片、样式、交互行为")]),t._v(")等代码。同时它会递归构建一个依赖关系图。然后根据配置打包成一个或者多个模块(bundle)")]),t._v(" "),a("blockquote",[a("p",[t._v("通过这里可以了解"),a("strong",[t._v("Javascript")]),t._v("模块和"),a("strong",[t._v("webpack")]),t._v("模块的信息")])]),t._v(" "),a("p",[t._v("在学习整个webpack的前题下需要知道几个基本的配置和4.0特有零配置方案。同时虽然有零配置的方案。但是还是可以进行针对于项目的高度集成配置。首先看一下以下五个核心的概念:")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("解释")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("配置名")]),t._v(" "),a("th",[t._v("版本新增选项")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("入口")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("entry")]),t._v(" "),a("td",[t._v("-")])]),t._v(" "),a("tr",[a("td",[t._v("输出")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("output")]),t._v(" "),a("td",[t._v("-")])]),t._v(" "),a("tr",[a("td",[t._v("转化器")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("loader")]),t._v(" "),a("td",[t._v("-")])]),t._v(" "),a("tr",[a("td",[t._v("插件")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("loader")]),t._v(" "),a("td",[t._v("-")])]),t._v(" "),a("tr",[a("td",[t._v("模式")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("mode")]),t._v(" "),a("td",[t._v("4.0x")])])])]),t._v(" "),a("h2",{attrs:{id:"入口-entry"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#入口-entry","aria-hidden":"true"}},[t._v("#")]),t._v(" 入口(entry)")]),t._v(" "),a("p",[t._v("入口起点(entry point)告诉webpack应该从那个模块开始进行构建内部依赖，进入入口之后，webpack会通过递归的方式通过配置进行寻找那些库和文件是入口起点文件的直接或者间接依赖。")]),t._v(" "),a("p",[t._v("模块被webpack处理之后，会被打包到指定的输出文件夹中。这里需要能过output进行配置，讲解output出口时会进行详细解说。")]),t._v(" "),a("p",[t._v("能过webapck的entry起点配置中，可以指定一个入口或者多个入口。")]),t._v(" "),a("blockquote",[a("p",[t._v("对于零配置来说，默认入口文件夹为当前配置文件的src目录，以下有示意图")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("webpackProject\n│\n└───src\n│   │--index.js  写入一些内容\n")])])]),a("p",[t._v("进入webpackProject根目录下终端运行以下命令执行默认命令,【"),a("strong",[t._v("必须保证全局安装了webpack-cli")]),t._v("】")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("webpack\n")])])]),a("p",[t._v("执行结果:")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("webpackProject\n│\n└───dist\n|   |--main.js\n└───src\n│   │--index.js  写入一些内容\n")])])]),a("p",[t._v("执行结果会在当前工程的根目录下添加dist文件夹，同时打包后的文件bundle为main.js。可以很清楚的明白如果零配置的情况下。会默认读取src目录下的index.js文件，打包后输出到同级的dist目录下,输出文件名为main.js。")]),t._v(" "),a("blockquote",[a("p",[t._v("注意: 会发生的错误")])]),t._v(" "),a("p",[t._v("如果src目录下的js文件名不是index.js,假设设计为util.js")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("webpackProject\n│\n└───src\n│   │--util.js  写入一些内容\n")])])]),a("h3",{attrs:{id:"报错内容"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#报错内容","aria-hidden":"true"}},[t._v("#")]),t._v(" 报错内容")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("Insufficient number of arguments or no entry found.\nAlternatively, run 'webpack(-cli) --help' for usage info.\n\nERROR in Entry module not found: Error: Can't resolve './src' in '/Users/ziksang/Desktop/webpackProject'\n")])])]),a("p",[t._v("报错的原因是因为在webpck零配置的情况下，默认是读取webpackProject工程根目录下src/index.js文件，所以提示读取不到./src/index.js入口文件。")]),t._v(" "),a("h2",{attrs:{id:"配置-configuration"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#配置-configuration","aria-hidden":"true"}},[t._v("#")]),t._v(" 配置(configuration)")]),t._v(" "),a("blockquote",[a("p",[t._v("配置webpack.config.js配置文件")])]),t._v(" "),a("p",[t._v("webpack.config.js文件是webpack默认读取配置的文件，需要存放在webpackProject工程的根目录下，webpack默认会在工程的根目录下读取webpack.config.js配置指示webpack打包流程的配置项。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("webpackProject\n│\n└───src\n│   │--util.js  写入一些内容\n|---|\n└───webpack.config.js  配置内容\n\n")])])]),a("p",[t._v("此时想要要把打包入口文件的名称改成util.js。需要通过额外的webpack.config.js文件进行打包指示的配置。否改改会走默认配置")]),t._v(" "),a("p",[t._v("webpack.config.js")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("module.exports = {\n    entry: './src/util.js'\n}\n")])])]),a("p",[t._v("在讲解entry入口的时候没有配置webpack.config.js配置文件，只会走webpack默认零配置的方案，零配置会默认读取当前根目录下./src/index.js文件进行打包。如果改变文件名index,则会报错。如果进行特定的配置，此时需要在webpack.config.js配置文件中进行特定的配置。")]),t._v(" "),a("p",[t._v("存在webpack.config.js,webpack运行的时候会试探寻找根目录下是否有webpack.config.js文件。存在的情况下。会根据webpack.config.js文件的配置项进行指示打包。")]),t._v(" "),a("p",[t._v("在entry选项中指令输入文件入口为./src/util.js，然后运行"),a("strong",[t._v("webpack")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("webpackProject\n│\n└───dist\n|   |--main.js\n└───src\n│   │--index.js \n")])])]),a("p",[t._v("可以发现。在"),a("code",[t._v("webpackProject")]),t._v("工程的根目录下，最后输出在dist目录下，名为main.js。从中可以明白一个道理。如果通过webpack.config.js配置的选项entry,webpack会根据webpack.config.js中的配置项进行指令输入。但是其余的所有配置将会依然会进行webpack零配置的默认配置项。")]),t._v(" "),a("h2",{attrs:{id:"出口-output"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#出口-output","aria-hidden":"true"}},[t._v("#")]),t._v(" 出口(output)")]),t._v(" "),a("p",[t._v("output是告诉webpack最后输出最后的bundles所存放的目录，以及如何命名打包后的文件名。从入口(entry)的演示可以看出默认配置输出到当前根目录下的dist文件夹下，同时输出的文件名命名为main.js,所有最后打包的应用程序都会存放在main.js文件夹下。同样你可以在配置文件中对output选项进行字段配置。比如说指定输出目录、指定输出文件名称，用这些来处理自己理想的程序输出。")])])}],!1,null,null,null);n.options.__file="README.md";e.default=n.exports}}]);