(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{151:function(e,t,s){"use strict";s.r(t);var n=s(0),_=Object(n.a)({},function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("div",{staticClass:"content"},[e._m(0),e._v(" "),e._m(1),e._v(" "),e._m(2),e._v(" "),e._m(3),e._v(" "),e._m(4),e._v(" "),e._m(5),e._v(" "),e._m(6),e._v(" "),e._m(7),e._v(" "),e._m(8),e._v(" "),e._m(9),e._v(" "),e._m(10),e._v(" "),s("p",[e._v("工程目录图:")]),e._v(" "),e._m(11),s("p",[e._v("\bwebpack.config.js")]),e._v(" "),e._m(12),e._m(13),e._v(" "),e._m(14),e._m(15),e._v(" "),e._m(16),e._v(" "),e._m(17),e._v(" "),e._m(18),e._v(" "),e._m(19),e._v(" "),e._m(20),e._v(" "),s("div",{staticClass:"tip custom-block"},[s("p",{staticClass:"custom-block-title"},[e._v("TIP")]),e._v(" "),s("p",[e._v("本节学习课程demo下载\b文件夹为"),s("a",{attrs:{href:"https://github.com/494755899/Webpack-learning/tree/master/source",target:"_blank",rel:"noopener noreferrer"}},[e._v("lesson11"),s("OutboundLink")],1)])]),e._v(" "),e._m(21),e._v(" "),e._m(22),e._v(" "),s("p",[e._v("工程文件目录:")]),e._v(" "),e._m(23),s("p",[e._v("webpack.config.js")]),e._v(" "),e._m(24),e._m(25),e._v(" "),e._m(26),e._v(" "),e._m(27),e._v(" "),s("p",[e._v("::: 此demo是一个错误示例的demo\n本节学习课程demo下载\b文件夹为"),s("a",{attrs:{href:"https://github.com/494755899/Webpack-learning/tree/master/source",target:"_blank",rel:"noopener noreferrer"}},[e._v("lesson12"),s("OutboundLink")],1),e._v("\n:::")]),e._v(" "),e._m(28),e._v(" "),e._m(29),e._v(" "),s("p",[e._v("webpack.config.js")]),e._v(" "),e._m(30),s("p",[e._v("打包后的输出结果目录")]),e._v(" "),e._m(31),e._m(32),e._v(" "),e._m(33),e._v(" "),s("div",{staticClass:"tip custom-block"},[s("p",{staticClass:"custom-block-title"},[e._v("TIP")]),e._v(" "),s("p",[e._v("本节学习课程demo下载\b文件夹为"),s("a",{attrs:{href:"https://github.com/494755899/Webpack-learning/tree/master/source",target:"_blank",rel:"noopener noreferrer"}},[e._v("lesson13"),s("OutboundLink")],1)])])])},[function(){var e=this.$createElement,t=this._self._c||e;return t("h1",{attrs:{id:"输出-output"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#输出-output","aria-hidden":"true"}},[this._v("#")]),this._v(" 输出(output)")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("code",[this._v("output")]),this._v("在"),t("code",[this._v("webpack.config.js")]),this._v("中配置是用来向指定的\b磁盘中写入\b打包的文件名和存放打包的文件路径。"),t("code",[this._v("output")]),this._v("的配置是以一个对象构成。同时也只会有一个对象的写法。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"output默认的写入方式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#output默认的写入方式","aria-hidden":"true"}},[this._v("#")]),this._v(" \boutput默认的\b写入方式")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("这里对\b\b概念的部分在回顾一下。对于"),t("code",[this._v("webpack4.x")]),this._v("的版本。在不配置"),t("code",[this._v("output\b")]),this._v("选项的时候，对文件路径和文件名是如何\b输出的。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("blockquote",[t("p",[this._v("path选项")])])},function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("p",[s("code",[e._v("path")]),e._v("选项对应的是文件输出的路径,在概念部分通过报错的案例,发现输出的路径必须是一个绝对路径,可以借助于"),s("code",[e._v("node.js")]),e._v("的"),s("code",[e._v("path")]),e._v("模块的"),s("code",[e._v("resolve")]),e._v("方进行拼接绝对\b路径。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("strong",[this._v("default")]),this._v(": 默认路径是输出到当前工程的根目录下的"),t("code",[this._v("dist")]),this._v("文件夹下")])},function(){var e=this.$createElement,t=this._self._c||e;return t("blockquote",[t("p",[this._v("filename选项")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("\b"),t("code",[this._v("filename\b")]),this._v("选项对应的是文件输出的文件名。我们可以通过"),t("code",[this._v("filename")]),this._v("自定义想要的输出的文件名")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("\b"),t("strong",[this._v("default")]),this._v(": 默认输出的文件名为"),t("code",[this._v("index.js")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"基础用法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#基础用法","aria-hidden":"true"}},[this._v("#")]),this._v(" 基础用法")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v(".webpackProject\n  |--src\n  |   |--index.js\n  |webapck.config.js\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("module.exports = {\n  entry: './src/index.js',\n  output: {\n    path: __dirname + 'dist/assets/js',\n    filename: 'bundle.js'\n  }\n}\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("运行"),t("strong",[this._v("webpack")]),this._v("打包命令")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v(".webpackProject\n  |--dist\n  |   |--js\n  |   |   |--bundle.js\n  |--src\n  |   |--index.js\n  |webapck.config.js\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("这里为了更好的展现打包的路径。\b把打包后的文件放入深层级的文件夹中。无论存放的打包后文件的层级目录有多深或者如何命名文件名都是一律从"),t("code",[this._v("path")]),this._v("选项中进行配置。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("blockquote",[t("p",[this._v("发现不同")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("这里并没有引入"),t("code",[this._v("path")]),this._v("模块和概念的演示代码有所不同。创建绝对路径这里直接使用"),t("code",[this._v("__dirname")]),this._v("和自定义的路径进行拼接。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("blockquote",[t("p",[this._v("原理")])])},function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("p",[e._v("要明白"),s("code",[e._v("webpack")]),e._v("是运行在"),s("code",[e._v("node.js")]),e._v("之上的。所以"),s("code",[e._v("__dirname")]),e._v("是"),s("code",[e._v("node.js")]),e._v("的全局变量。输的结果是当前文件根路径。通过"),s("code",[e._v("console.log(__dirname)")]),e._v(",笔者电脑打印出来的结果为"),s("code",[e._v("/Users/ziksang/Desktop/webpack-doc/source/lesson11")])])},function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("div",{staticClass:"warning custom-block"},[s("p",{staticClass:"custom-block-title"},[e._v("注意")]),e._v(" "),s("p",[e._v("这里需要注意的是在概念部分\n通过"),s("code",[e._v("path.resolve(__dirname, 'dist')")]),e._v("\n输出的结果则为:\n"),s("code",[e._v("/Users/ziksang/Desktop/webpack-doc/source/lesson11/dist")])]),e._v(" "),s("p",[e._v("通过"),s("code",[e._v("__dirname + 'dist'")]),e._v("\n输出的结果:\n"),s("code",[e._v("/Users/ziksang/Desktop/webpack-doc/source/lesson11dist")])]),e._v(" "),s("p",[e._v("因为"),s("code",[e._v("path.resolve()")]),e._v("方法会对路径进行自动补全,而本节的方式是字符串拼接。所以在"),s("code",[e._v("dist")]),e._v("字符串前必须记得加上 "),s("code",[e._v("/")]),e._v(" ,这样才是最后想要得到的根路径结果。")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"多入口多输出"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#多入口多输出","aria-hidden":"true"}},[this._v("#")]),this._v(" 多入口多输出")])},function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("p",[e._v("在讲解"),s("code",[e._v("entry")]),e._v("入口的时候,已经介绍了多入口的配置。在没有配置"),s("code",[e._v("output")]),e._v("选项的情况下。会根据"),s("code",[e._v("output")]),e._v("默认配置生成多个输出文件。在输出的文件名根据"),s("code",[e._v("entry")]),e._v("对象中的每个属性名来确定最后的输出文件的名称。是一一对应的结果。如果我们想自定义输出的文件名如何操作？")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v(".webpackProject\n  |--src\n  |   |--index1.js\n  |   |--index2.js\n  |webapck.config.js\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("module.exports = {\n  entry: {\n    index1: './src/index1.js',\n    index2: './src/index2.js'\n  },\n  output: {\n    path: __dirname + '/dist',\n    filename: 'bundle.js'\n  }\n}\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("运行"),t("strong",[this._v("webapck")])])},function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("div",{staticClass:"danger custom-block"},[s("p",{staticClass:"custom-block-title"},[e._v("报错:")]),e._v(" "),s("p",[e._v("仔细观查"),s("code",[e._v("output")]),e._v("中"),s("code",[e._v("filename")]),e._v("的配置,此时的文件名像往前一样写。输出的打包文件为"),s("code",[e._v("bundle.js")]),e._v("文件。")]),e._v(" "),s("p",[e._v("ERROR in chunk index2 [entry]\nbundle.js\nConflict: Multiple chunks emit assets to the same filename bundle.js (chunks 0 and 1)")])])},function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("p",[e._v("此时会发生报错，指向的报错是一种冲突的方式。在"),s("code",[e._v("entry")]),e._v("中通过对象方式定义多个入口，每个入口都会成生一个"),s("code",[e._v("js")]),e._v("文件。同样也是各自的主入口文件,但是在输出"),s("code",[e._v("output")]),e._v("对象中只有一个"),s("code",[e._v("filename")]),e._v("字段。提供入口文件打包后输出的文件。从报错中可以明白，当打包第一个"),s("code",[e._v("index1.js")]),e._v("的文件的时候。输出的文件名为"),s("code",[e._v("bundle.js")]),e._v("。此时再打包"),s("code",[e._v("index2.js")]),e._v("文件的时候。此时"),s("code",[e._v("filename")]),e._v("依然为"),s("code",[e._v("bundle.js")]),e._v("。如果打包出的文件名为相同的情况下。后者会覆盖前者。"),s("code",[e._v("webpack")]),e._v("检测到之后，会以错误冲突的方式告诉我们。此时是两个入口文件，而输出的文件名是相同的。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"占位符-substitutions"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#占位符-substitutions","aria-hidden":"true"}},[this._v("#")]),this._v(" 占位符(substitutions)")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("通过"),t("code",[this._v("substitutions")]),this._v("(占位符)变量动态的创建的对应入口,通过"),t("code",[this._v("substitutions")]),this._v("作为输出文件的命名变量。要知道这个"),t("code",[this._v("substitutions")]),this._v("变量取值是从什么方位进行取值的。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("module.exports = {\n  entry: {\n    index1: './src/index1.js',\n    index2: './src/index2.js'\n  },\n  output: {\n    path: __dirname + '/dist',\n    // 依然采用之前的目录结构,在bundle.js之前加上[name]占位符\n    filename: '[name].bundle.js'\n  }\n}\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v(".webpackProject\n +|--dist\n +|   |--index1.bundle.js\n +|   |--index2.bundle.js\n  |--src\n  |   |--index1.js\n  |   |--index2.js\n  |webapck.config.js\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("对于最后输出的文件名中的"),t("code",[this._v("[name]")]),this._v("占位符变量是根据"),t("code",[this._v("entry")]),this._v("入口对象的字段名时行取值的。")])},function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("p",[e._v("对于"),s("code",[e._v("filename")]),e._v("字段中的"),s("code",[e._v(".bundle")]),e._v("对于每个打包后的文件在占位符变量之后都会添加"),s("code",[e._v(".bundle")]),e._v(",对于"),s("code",[e._v(".bundle")]),e._v("来说就是所有打包文件的公共部分名称。")])}],!1,null,null,null);_.options.__file="output.md";t.default=_.exports}}]);