(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{152:function(t,e,s){"use strict";s.r(e);var c=s(0),_=Object(c.a)({},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"content"},[t._m(0),t._v(" "),t._m(1),t._v(" "),t._m(2),t._v(" "),t._m(3),t._v(" "),t._m(4),t._m(5),t._v(" "),s("p",[t._v("配置文件可以很清晰和管理好我们的打包需求,不建意以下方式的做法:")]),t._v(" "),t._m(6),t._v(" "),t._m(7),t._m(8),t._v(" "),t._m(9),t._v(" "),t._m(10),t._v(" "),t._m(11),t._v(" "),t._m(12),t._v(" "),t._m(13),t._v(" "),t._m(14),t._m(15),t._v(" "),s("p",[t._v("prod.config.js")]),t._v(" "),t._m(16),t._m(17),t._v(" "),t._m(18),t._v(" "),t._m(19),t._v(" "),t._m(20),t._v(" "),t._m(21),t._v(" "),t._m(22),t._v(" "),t._m(23),s("div",{staticClass:"tip custom-block"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("p",[t._v("本节学习课程demo下载\b文件夹为"),s("a",{attrs:{href:"https://github.com/494755899/Webpack-learning/tree/master/source",target:"_blank",rel:"noopener noreferrer"}},[t._v("lesson9"),s("OutboundLink")],1)])]),t._v(" "),t._m(24),t._v(" "),t._m(25),t._v(" "),t._m(26),s("p",[t._v("prod.config.js")]),t._v(" "),t._m(27),s("p",[t._v("在上一节已经讲解过如何启动非默认名的配置文件。")]),t._v(" "),t._m(28),t._v(" "),t._m(29),t._v(" "),t._m(30),t._v(" "),s("div",{staticClass:"tip custom-block"},[s("p",{staticClass:"custom-block-title"},[t._v("解决方案")]),t._v(" "),s("p",[t._v("虽然启动的配置文件在"),s("code",[t._v("build")]),t._v("目录下,这里要牵扯到了"),s("a",{attrs:{href:"http://www.baidu.com",target:"_blank",rel:"noopener noreferrer"}},[t._v("context"),s("OutboundLink")],1),t._v("上下文环境。但是上下文的环境还是在根目录下。")])]),t._v(" "),s("p",[t._v("prod.config.js")]),t._v(" "),t._m(31),t._m(32),t._v(" "),t._m(33),t._v(" "),t._m(34),t._v(" "),s("div",{staticClass:"tip custom-block"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("p",[t._v("本节学习课程demo下载\b文件夹为"),s("a",{attrs:{href:"https://github.com/494755899/Webpack-learning/tree/master/source",target:"_blank",rel:"noopener noreferrer"}},[t._v("lesson10"),s("OutboundLink")],1)])]),t._v(" "),t._m(35),t._v(" "),t._m(36)])},[function(){var t=this.$createElement,e=this._self._c||t;return e("h1",{attrs:{id:"配置-configuration"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#配置-configuration","aria-hidden":"true"}},[this._v("#")]),this._v(" 配置(configuration)")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("p",[s("code",[t._v("webpack.config.js")]),t._v("是命令"),s("code",[t._v("webpack")]),t._v("如何进行打包的"),s("code",[t._v("javascript")]),t._v("文件，通过"),s("code",[t._v("webpack.config.js")]),t._v("文件可以根据不同的配置打包不同的效果。根据对象定义的属性进行解析。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("code",[this._v("webpack")]),this._v("配置文件标准是"),e("code",[this._v("Node.js CommonJS")]),this._v("模块。")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ol",[s("li",[t._v("可以通过"),s("code",[t._v("require('./xxx.js')")]),t._v(",引入本地文件")]),t._v(" "),s("li",[t._v("可以通过"),s("code",[t._v("require('vue')")]),t._v(", 引入"),s("code",[t._v("npm")]),t._v("包的模块")]),t._v(" "),s("li",[t._v("最后把配置文件对象的方式通过"),s("code",[t._v("module.exports")]),t._v("导出")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("module.exports = {\n  ...需要的配置\n}\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"使用配置文件的好处"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#使用配置文件的好处","aria-hidden":"true"}},[this._v("#")]),this._v(" 使用配置文件的好处")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ol",[e("li",[this._v("通过"),e("code",[this._v("webpack")]),this._v("命令行写入参数进行打包,这种方式不直观,会导致命令参数太长,例如:")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("webpack --entry ./src/index --output-filename index.js\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ol",{attrs:{start:"2"}},[e("li",[this._v("在配置"),e("code",[this._v("webpack.config.js")]),this._v("文件的时候，通常我们要配置开发环境和生产环境的配置文件,但是一些阀门("),e("strong",[this._v("配置的开关")]),this._v(")和一些公用配置可以提取出来，不要使得配置文件的庞大，会导致难以维护。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"统一分风格配置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#统一分风格配置","aria-hidden":"true"}},[this._v("#")]),this._v(" 统一分风格配置")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("在"),e("code",[this._v("webpack")]),this._v("中何为统一风格,一个完整的"),e("code",[this._v("webpack")]),this._v("打包配置必然存在开发环境和生产环境的配置。")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ol",[s("li",[t._v("把阀门(配置开关通过"),s("code",[t._v("config.js")]),t._v("文件提取出来),例如是否需要自动开浏览器，打后存放的文件路径等。")]),t._v(" "),s("li",[t._v("把公用配置比如说"),s("code",[t._v("loader")]),t._v(","),s("code",[t._v("plugin")]),t._v("给提取出来,放用一个公用例如:"),s("code",[t._v("base.config.js")]),t._v(",通过"),s("code",[t._v("webpack-merge")]),t._v("包进行基础合并。")]),t._v(" "),s("li",[t._v("把"),s("code",[t._v("development")]),t._v("和"),s("code",[t._v("production")]),t._v("两套打包环境进行区分。对于各自环境配置各自的特有配置。")]),t._v(" "),s("li",[t._v("例如: "),s("code",[t._v(".babelrc")]),t._v(" "),s("code",[t._v(".postcss.config.js")]),t._v("这些额外对"),s("code",[t._v("babel")]),t._v("的配置和"),s("code",[t._v("postcss")]),t._v("的配置通过配置文件方式进行配置。不要通过内联方式或者在"),s("code",[t._v("package.json")]),t._v("中写入。除了你想配置一些开箱即用的方式。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"webpack配置文件名称"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#webpack配置文件名称","aria-hidden":"true"}},[this._v("#")]),this._v(" webpack配置文件名称")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("p",[t._v("对于"),s("code",[t._v("webpack.config.js")]),t._v("而言并没有限定一定要在根目录下或者一定需要文件命为"),s("code",[t._v("webpack.config.js")]),t._v("。通常整个完整工程在"),s("code",[t._v("webpack")]),t._v("配置下必然会分为两套环境，"),s("code",[t._v("development")]),t._v("和"),s("code",[t._v("production")]),t._v("环境。此时执行的配置文件必然也不同，同时语义也不够强烈。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("webpackProject\n│\n└───src\n│   │--util.js\n|---prod.config.js\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("在"),e("code",[this._v("build")]),this._v("目录下分别创建"),e("code",[this._v("prod.config.js")]),this._v(",对应着生产环境的配置。同时写入以下配置代码:")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("module.exports = {\n    entry: '../src/util.js'\n}\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("在命行运行"),e("code",[this._v("webpack")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"danger custom-block"},[e("p",{staticClass:"custom-block-title"},[this._v("WARNING")]),this._v(" "),e("p",[this._v("ERROR in Entry module not found: Error: Can't resolve './src' in '/Users/ziksang/Desktop/webpack-doc/source/lesson9'")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("运行时程序报错了，依然和概念中介绍"),e("code",[this._v("entry")]),this._v("入口一样的报错。并没有找到"),e("code",[this._v("./src/index.js")]),this._v("。"),e("strong",[this._v("说明什么？")])])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("p",[t._v("说明运行"),s("code",[t._v("webpack")]),t._v("命令没有指定任何参数的时候，"),s("code",[t._v("webpack")]),t._v("默认只会从根目录下读取"),s("code",[t._v("webpack.config.js")]),t._v("文件进行指令打包。如果没有读取到，则会走零配置的默认打包方案，从当前目录"),s("code",[t._v("src/index.js")]),t._v("中找打包入口。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("blockquote",[e("p",[this._v("解决方案")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("需要自定义打包配置文件的文件名或者打包配置文件的目录结构的时候，需要配置命令行参数，通过"),e("code",[this._v("--config prod.config.js")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("// 运行\nwebpack --config prod.config.js\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"入口路径解析的问题"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#入口路径解析的问题","aria-hidden":"true"}},[this._v("#")]),this._v(" 入口路径解析的问题")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("现在有一种这样的情况,为了文件的夹的合理性，把"),e("code",[this._v("dev.config.js")]),this._v("与"),e("code",[this._v("prod.config.js")]),this._v("放入到根目录下的"),e("code",[this._v("build")]),this._v("目录下进行统一管理")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("webpackProject\n│\n└───src\n│   │--util.js\n└───build\n|   |--dev.config.js\n|   |--prod.config.js\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("module.exports = {\n  entry: '../src/util.js'\n}\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("运行"),e("code",[this._v("webapck --config build/prod.config.js")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"danger custom-block"},[e("p",{staticClass:"custom-block-title"},[this._v("WARNING")]),this._v(" "),e("p",[this._v("ERROR in Entry module not found: Error: Can't resolve '../src/util.js' in '/Users/ziksang/Desktop/webpack-doc/source/lesson10'")])])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("p",[t._v("对于以上的情况肯定很好奇,从表面上看配置本身没有问题。启动的文件是"),s("code",[t._v("build")]),t._v("目录下的"),s("code",[t._v("prod.config.js")]),t._v("。上面报的错误信息是找不到"),s("code",[t._v("../src/util.js")]),t._v("。如果通过"),s("code",[t._v("prod.config.js")]),t._v("启动配置进行寻找入口的情况下。本应该没有问题。但是为什么还是提示找不对应的入口文件呢？")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("module.exports = {\n  entry: './src/util.js'\n}\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("再次运行"),e("code",[this._v("webapck --config build/prod.config.js")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"原因分析"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#原因分析","aria-hidden":"true"}},[this._v("#")]),this._v(" 原因分析")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("p",[t._v("入口取决于上下文环境的配置。在默认配置下，上下文("),s("strong",[t._v("context")]),t._v(")是在根目录下。虽然"),s("code",[t._v("prod.config.js")]),t._v("存放在"),s("code",[t._v("build")]),t._v("目录下,在启动"),s("code",[t._v("webpack")]),t._v("打包的时候，"),s("code",[t._v("webpack")]),t._v("不是通过"),s("code",[t._v("prod.config.js")]),t._v("文件所在位置通过相对路径进行寻找打包的入口文件,这而是取决于上下文环境寻找入口的打包文件,具体点就是从根目录下进行寻找入口文件。这里也很容易导致迷惑。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"总结"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#总结","aria-hidden":"true"}},[this._v("#")]),this._v(" 总结")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ol",[s("li",[s("p",[t._v("在根路径下寻找不到命名为"),s("code",[t._v("webpack.config.js")]),t._v("文件的时候,运行打包命令会走·webpack4.x·的默认配置")])]),t._v(" "),s("li",[s("p",[t._v("通过其它命名打包配置文件的时候,启动打包命令的时候需要通过参数"),s("code",[t._v("--config")]),t._v(" （"),s("strong",[t._v("指定打包文件的名称/从根目录算起")]),t._v("）")])]),t._v(" "),s("li",[s("p",[t._v("对于入口文件而言,"),s("code",[t._v("webpack")]),t._v("在打包的时候不会根据配置文件所在的位置进行寻找,而是根据"),s("code",[t._v("context")]),t._v("上下文环境进行寻找。默认的上下文环境为工程的根路径。")])])])}],!1,null,null,null);_.options.__file="configuration.md";e.default=_.exports}}]);