(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{148:function(t,e,s){"use strict";s.r(e);var n=s(0),a=Object(n.a)({},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"content"},[t._m(0),t._v(" "),s("p",[t._v("output在webpack.config.js中配置是用来向指定的\b磁盘中写入\b打包的文件名和存放打包的文件路径。output的配置是以一个对象构成。同时也只会有一个对象的写法。")]),t._v(" "),t._m(1),t._v(" "),s("p",[t._v("这里对\b\b概念的部分在回顾一下。对于webpack4.x的版本。在不配置output\b选项的时候，对文件路径和文件名是如何\b输出的。")]),t._v(" "),s("p",[t._v("\b> path选项")]),t._v(" "),s("p",[t._v("path选项对应的是文件输出的路径,在概念部分通过报错的案例,发现输出的路径必须是一个绝对路径,可以借助于node.js的path模块的resolve方进行拼接绝对\b路径。")]),t._v(" "),s("p",[t._v("default: 默认路径是输出到当前工程的根目录下的dist文件夹下")]),t._v(" "),t._m(2),t._v(" "),s("p",[t._v("\bfilename\b选项对应的是文件输出的文件名。我们可以通过filename自定义想要的输出的文件名")]),t._v(" "),s("p",[t._v("\bdefault: 默认输出的文件名为index.js")]),t._v(" "),t._m(3),t._v(" "),s("p",[t._v("工程目录图:")]),t._v(" "),t._m(4),s("p",[t._v("\bwebpack.config.js")]),t._v(" "),t._m(5),s("p",[t._v("运行webpack打包命令")]),t._v(" "),t._m(6),s("p",[t._v("这里为了更好的展现打包的路径。\b把打包后的文件放入深层级的文件夹中。无认存放的打包后文件的层级目录有多深或者如何命名文件名都是一律从path选项中进行配置。")]),t._v(" "),t._m(7),t._v(" "),s("p",[t._v("这里并没有引入path模块和概念的演示代码有所不同。创建绝对路径这里直接使用__dirname和自定义的路径进行拼接。")]),t._v(" "),t._m(8),t._v(" "),s("p",[t._v("要明白webpack是运行在node.js之上的。所以__dirname是node.js的全局变量。输的结果是当前文件根路径。通过console.log(__dirname),笔者电脑打印出来的结果为/Users/ziksang/Desktop/webpack-doc/source/lesson11")]),t._v(" "),t._m(9),t._v(" "),s("div",{staticClass:"tip custom-block"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("p",[t._v("本节学习课程demo下载\b文件夹为"),s("a",{attrs:{href:"https://github.com/494755899/Webpack-learning/tree/master/source",target:"_blank",rel:"noopener noreferrer"}},[t._v("lesson11"),s("OutboundLink")],1)])]),t._v(" "),t._m(10),t._v(" "),s("p",[t._v("在讲解entry入口的时候,已经介绍了多入口的配置。在没有配置output选项的情况下。会根据output默认配置生成多个输出文件。在输出的文件名根据entry对象中的每个属性名来确定最后的输出文件的名称。是一一对应的结果。如果我们想自定义输出的文件名如何操作？")]),t._v(" "),s("p",[t._v("工程文件目录:")]),t._v(" "),t._m(11),s("p",[t._v("webpack.config.js")]),t._v(" "),t._m(12),s("p",[t._v("运行webapck")]),t._v(" "),t._m(13),t._v(" "),s("p",[t._v("此时会发生报错，指向的报错是一种冲突的方式。在entry中通过对象方式定义多个入口，每个入口都会成生一个js文件。同样也是各自的主入口文件,但是在输出output对象中只有一个filename字段。提供入口文件打包后输出的文件。从报错中可以明白，当打包第一个index1.js的文件的时候。输出的文件名为bundle.js。此时再打包index2.js文件的时候。此时filename依然为bundle.js。如果打包出的文件名为相同的情况下。后者会覆盖前者。webpack检测到之后，会以错误冲突的方式告诉我们。此时是两个入口文件，而输出的文件名是相同的。")]),t._v(" "),t._m(14),t._v(" "),s("p",[t._v("通过substitutions(占位符)变量动态的创建的对应入口")])])},[function(){var t=this.$createElement,e=this._self._c||t;return e("h1",{attrs:{id:"输出-output"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#输出-output","aria-hidden":"true"}},[this._v("#")]),this._v(" 输出(output)")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"output默认的写入方式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#output默认的写入方式","aria-hidden":"true"}},[this._v("#")]),this._v(" \boutput默认的\b写入方式")])},function(){var t=this.$createElement,e=this._self._c||t;return e("blockquote",[e("p",[this._v("filename选项")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"基础用法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#基础用法","aria-hidden":"true"}},[this._v("#")]),this._v(" 基础用法")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v(".webpackProject\n  |--src\n  |   |--index.js\n  |webapck.config.js\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("module.exports = {\n  entry: './src/index.js',\n  output: {\n    path: __dirname + 'dist/assets/js',\n    filename: 'bundle.js'\n  }\n}\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v(".webpackProject\n  |--dist\n  |   |--js\n  |   |   |--bundle.js\n  |--src\n  |   |--index.js\n  |webapck.config.js\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("blockquote",[e("p",[this._v("发现不同")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("blockquote",[e("p",[this._v("原理")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"warning custom-block"},[e("p",{staticClass:"custom-block-title"},[this._v("注意")]),this._v(" "),e("p",[this._v("这里需要注意的是在概念部分\n通过path.resolve(__dirname, 'dist')\n输出的结果则为:\n/Users/ziksang/Desktop/webpack-doc/source/lesson11/dist")]),this._v(" "),e("p",[this._v("通过__dirname + 'dist'\n输出的结果:\n/Users/ziksang/Desktop/webpack-doc/source/lesson11dist")]),this._v(" "),e("p",[this._v("因为path.resolve()方法会对路径进行自动补全,而本节的方式是字符串拼接。所以在dist字符串前必须记得加上 / ,这样才是最后想要得到的根路径结果。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"多入口多输出"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#多入口多输出","aria-hidden":"true"}},[this._v("#")]),this._v(" 多入口多输出")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v(".webpackProject\n  |--src\n  |   |--index1.js\n  |   |--index2.js\n  |webapck.config.js\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("module.exports = {\n  entry: {\n    index1: './src/index1.js',\n    index2: './src/index2.js'\n  },\n  output: {\n    path: __dirname + '/dist',\n    filename: 'bundle.js'\n  }\n}\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"danger custom-block"},[e("p",{staticClass:"custom-block-title"},[this._v("报错:")]),this._v(" "),e("p",[this._v("仔细观查output中filename的配置,此时的文件名像往前一样写。输出的打包文件为bundle.js文件。")]),this._v(" "),e("p",[this._v("ERROR in chunk index2 [entry]\nbundle.js\nConflict: Multiple chunks emit assets to the same filename bundle.js (chunks 0 and 1)")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"占位符-substitutions"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#占位符-substitutions","aria-hidden":"true"}},[this._v("#")]),this._v(" 占位符(substitutions)")])}],!1,null,null,null);a.options.__file="output.md";e.default=a.exports}}]);